<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="getFlights-test" doc:id="d7210da3-27e5-4567-9576-c6041d9d257d" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="e107934c-561e-4010-993c-960d306846ab" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="37a7fa8d-2042-4790-ad18-c7a0e12efd74" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getFlightstest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getFlightstest\mock_variable_.dwl')]" />
						<munit-tools:variable key="source" value="#[output application/java --- readUrl('classpath://getFlightstest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="dest" value="#[output application/java --- readUrl('classpath://getFlightstest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="4b904bb5-f01f-4def-b999-d7583330a860" >
				<munit:payload value="#[readUrl('classpath://getFlightstest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getFlightstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getFlightstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getFlights" doc:id="d994e160-1785-45ab-b382-d8c6a735ef97" name="getFlights"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="531dfeee-4dac-423d-9161-02b63f970a71" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getFlightstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="bookFlights-test" doc:id="fd88fb3b-44b0-41b4-9b4a-1a1f18d44742" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock insertingData" doc:id="663a9d22-f2ef-4421-97ec-bac89feb93cb" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4348ebb6-3cf7-483b-b9d0-ff3b321b78ab" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://bookFlightstest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://bookFlightstest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="1aa4887b-f1ce-42e1-9f9f-8b5f696fb6d1" >
				<munit:payload value="#[output application/json --- readUrl('classpath://bookFlightstest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://bookFlightstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://bookFlightstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookFlights" doc:id="08477c1f-71d2-47ac-a50a-89d26669a913" name="bookFlights"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="913d1b22-0e37-4dc9-9086-c4be505197cb" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import bookFlightstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
